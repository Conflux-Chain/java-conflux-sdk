/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.1/userguide/java_library_plugin.html
 */

plugins {
    id 'java-library'  // Apply the java-library plugin to add support for Java Library
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.conflux-chain'
version = '1.0.5'   // SNAPSHOT

repositories {
    jcenter()
//    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    compile 'org.web3j:core:4.8.4'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}
task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications;
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'conflux.web3j'
            artifact sourcesJar
            artifact javadocJar

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'java-conflux-sdk'
                description = 'Java SDK for conflux network'
                url = 'https://github.com/Conflux-Chain/java-conflux-sdk'
                properties = [
                        tags: "blockchain, conflux"
                ]
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://github.com/Conflux-Chain/conflux-rust/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'Pana'
                        name = 'Pana.W'
                        email = 'pana.wang@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:https://github.com/Conflux-Chain/java-conflux-sdk.git'
                    developerConnection = 'scm:git://github.com/Conflux-Chain/java-conflux-sdk.git'
                    url = 'https://github.com/conflux-chain/java-conflux-sdk'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            name = "OSSRH"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }

//        maven {
//            name = "GitHubPackages"
//            url = "https://maven.pkg.github.com/conflux-chain/java-conflux-sdk"
//            credentials {
//                username = System.getenv("GITHUB_ACTOR")
//                password = System.getenv("GITHUB_TOKEN")
//            }
//        }
    }
}

// ref https://docs.github.com/en/actions/guides/publishing-java-packages-with-gradle
